{"version":3,"file":"roadmap-tabs-block/index.js","mappings":"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CAAC;MAAEqC,iBAAiB,EAAEtB;IAAU,CAAC;EAAE,CACzE,CACS,CACO,CAAC,EACpBO,oDAAA,YAAG,oBAAqB,CACpB,CAAC;AAER;;;;;;;;;;;;;;;;;AC7EsD;AAChC;AACI;AACA;AACU;AAEpCgB,oEAAiB,CAACG,wCAAQ,EAAE;EACxBF,IAAI;EACJC,IAAIA,+CAAAA;AACR,CAAC,CAAC;;;;;;;;;;;;;;;;ACTF;AACA;AACA;AACA;AACA;AACA;AACwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,IAAIA,CAAA,EAAG;EAC9B,OAAO,IAAI;AACZ;;;;;;;;;;;ACnBA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://roadmapwp-pro/./src/roadmap-tabs-block/edit.js","webpack://roadmapwp-pro/./src/roadmap-tabs-block/index.js","webpack://roadmapwp-pro/./src/roadmap-tabs-block/save.js","webpack://roadmapwp-pro/./src/roadmap-tabs-block/style.scss","webpack://roadmapwp-pro/external window \"React\"","webpack://roadmapwp-pro/external window [\"wp\",\"blockEditor\"]","webpack://roadmapwp-pro/external window [\"wp\",\"blocks\"]","webpack://roadmapwp-pro/external window [\"wp\",\"components\"]","webpack://roadmapwp-pro/external window [\"wp\",\"data\"]","webpack://roadmapwp-pro/webpack/bootstrap","webpack://roadmapwp-pro/webpack/runtime/chunk loaded","webpack://roadmapwp-pro/webpack/runtime/compat get default export","webpack://roadmapwp-pro/webpack/runtime/define property getters","webpack://roadmapwp-pro/webpack/runtime/hasOwnProperty shorthand","webpack://roadmapwp-pro/webpack/runtime/make namespace object","webpack://roadmapwp-pro/webpack/runtime/jsonp chunk loading","webpack://roadmapwp-pro/webpack/before-startup","webpack://roadmapwp-pro/webpack/startup","webpack://roadmapwp-pro/webpack/after-startup"],"sourcesContent":["import { InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { PanelBody, CheckboxControl, SelectControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n\nexport default function Edit({ attributes, setAttributes }) {\n\t\t\t\n\t// Fetch statuses and taxonomies using hooks at the top level\n\tconst statuses = useSelect(select => select('core').getEntityRecords('taxonomy', 'status', { per_page: -1 }), []);\n\tconst ideaTaxonomies = useSelect(select => {\n\t\tconst allTaxonomies = select('core').getTaxonomies();\n\t\treturn allTaxonomies ? allTaxonomies.filter(tax => tax.types.includes('idea') && tax.slug !== 'status') : [];\n\t}, []);\n\n\t// Update functions for selected statuses and taxonomies\n\tconst updateSelectedStatuses = (termSlug, isChecked) => {\n\t\tconst newStatuses = { ...attributes.selectedStatuses, [termSlug]: isChecked };\n\t\tsetAttributes({ selectedStatuses: newStatuses });\n\t};\n\tconst updateSelectedTaxonomies = (taxonomySlug, isChecked) => {\n\t\tconst newTaxonomies = { ...attributes.selectedTaxonomies, [taxonomySlug]: isChecked };\n\t\tsetAttributes({ selectedTaxonomies: newTaxonomies });\n\t};\n\n\t// Conditional rendering after hooks\n\tif (!statuses) {\n\t\treturn <p>Loading statuses...</p>;\n\t}\n\n\treturn (\n\t\t<div {...useBlockProps()}>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title=\"Select Statuses\">\n\t\t\t\t\t{statuses.map(term => (\n\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\tkey={term.id}\n\t\t\t\t\t\t\tlabel={term.name}\n\t\t\t\t\t\t\tchecked={!!attributes.selectedStatuses[term.slug]}\n\t\t\t\t\t\t\tonChange={(isChecked) => updateSelectedStatuses(term.slug, isChecked)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title=\"Select Taxonomies\">\n\t\t\t\t\t{ideaTaxonomies && ideaTaxonomies.map(taxonomy => (\n\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\tkey={taxonomy.slug}\n\t\t\t\t\t\t\tlabel={taxonomy.name}\n\t\t\t\t\t\t\tchecked={!!attributes.selectedTaxonomies[taxonomy.slug]}\n\t\t\t\t\t\t\tonChange={(isChecked) => updateSelectedTaxonomies(taxonomy.slug, isChecked)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title=\"Default Status\">\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Select a Default Status\"\n\t\t\t\t\t\tvalue={attributes.defaultStatus}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: 'Select Status', value: '' },\n\t\t\t\t\t\t\t...statuses.map(status => ({\n\t\t\t\t\t\t\t\tlabel: status.name,\n\t\t\t\t\t\t\t\tvalue: status.slug,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ defaultStatus: value })}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title=\"Access Control\">\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\tlabel=\"Allow only logged in users to see this block?\"\n\t\t\t\t\t\tchecked={attributes.onlyLoggedInUsers}\n\t\t\t\t\t\tonChange={(isChecked) => setAttributes({ onlyLoggedInUsers: isChecked })}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<p>Roadmap Tabs Block</p>\n\t\t</div>\n\t);\n}","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nregisterBlockType(metadata, {\n    edit,\n    save,\n});","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save() {\n\treturn null;\n}\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"roadmap-tabs-block/index\": 0,\n\t\"roadmap-tabs-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkroadmapwp_pro\"] = globalThis[\"webpackChunkroadmapwp_pro\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"roadmap-tabs-block/style-index\"], () => (__webpack_require__(\"./src/roadmap-tabs-block/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["InspectorControls","useBlockProps","PanelBody","CheckboxControl","SelectControl","useSelect","Edit","attributes","setAttributes","statuses","select","getEntityRecords","per_page","ideaTaxonomies","allTaxonomies","getTaxonomies","filter","tax","types","includes","slug","updateSelectedStatuses","termSlug","isChecked","newStatuses","selectedStatuses","updateSelectedTaxonomies","taxonomySlug","newTaxonomies","selectedTaxonomies","createElement","title","map","term","key","id","label","name","checked","onChange","taxonomy","value","defaultStatus","options","status","onlyLoggedInUsers","registerBlockType","edit","save","metadata"],"sourceRoot":""}